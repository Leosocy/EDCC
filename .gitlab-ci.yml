stages:
  - tests_and_lints
  - build_image

variables:
  DOCKER_REGISTRY: registry.cn-hangzhou.aliyuncs.com/leosocy
  IMAGE: ${DOCKER_REGISTRY}/edcc

before_script:
  - BASE_IMAGE_TAG=${IMAGE}:base-latest
  - PYTHON_IMAGE_TAG=${IMAGE}:python-latest

# -------------------- Tests --------------------
build_test_coverage:
  stage: tests_and_lints
  image:
    name: ${DOCKER_REGISTRY}/opencv:ci
  coverage: '/lines[\.]+\: (\d+\.\d+)\%/'
  script:
    - mkdir -p build; cd build
    - cmake ../test; make -j
    - ./test_edcc
    - lcov -b . -d edcc -c -o cov.info
    - lcov -r cov.info "/usr/*" "*/thirdparty/*" "*/test/*" -o cov.info -q
    - lcov -l cov.info
    - bash <(curl -s https://codecov.io/bash) -t ${CODECOV_TOKEN}
    - genhtml -o cov_result cov.info
    - mv cov_result ..
    - rm -rf *
    - cmake ..; make -j; make install
    - make -j run_py_sample
  artifacts:
    name: coverage
    paths:
      - cov_result

# -------------------- Lints --------------------
cppcheck:
  stage: tests_and_lints
  image:
    name: ${DOCKER_REGISTRY}/cppcheck:1.83
  script:
    - cppcheck --enable=warning --error-exitcode=1 -I source/include source/src

# -------------------- Build onbuild image --------------------

build_image:
  stage: build_image
  image: docker:latest
  tags:
    - docker
  only:
    - master
  when: manual
  services:
    - docker:dind
  script:
    - docker login --username ${ALIYUN_DOCKER_REGISTRY_USERNAME} --password ${ALIYUN_DOCKER_REGISTRY_PASSWD} ${DOCKER_REGISTRY}
    - docker build -t ${BASE_IMAGE_TAG} -f Dockerfile.base .
    - docker build -t ${PYTHON_IMAGE_TAG} -f Dockerfile.python .
    - docker push ${IMAGE}
    